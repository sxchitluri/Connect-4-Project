import java.util.ArrayList;
import DataObjects.GameDataObject;

public class GameDataAccess {
    private static ArrayList<GameDataObject> games = new ArrayList<>(); //Better way to represent the games?
    private static int nextGameId = 0;

    public static GameDataObject createGame(int gameTypeId, int player1Id, int player2Id) throws Exception {
        if (!isValidGameTypeId(gameTypeId)) {
            throw new Exception("Invalid GameTypeId");
        }
        if (!isValidPlayerId(player1Id)) {
            throw new Exception("Invalid Player1Id");
        }
        if (!isValidPlayerId(player2Id)) {
            throw new Exception("Invalid Player2Id");
        }
        
        GameDataObject newGame = new GameDataObject(getNextGameId(), gameTypeId, player1Id, player2Id);
        games.add(newGame);
        return newGame;
    }

    private static int getNextGameId() {
        return nextGameId++;
    }
            
    private static boolean isValidGameTypeId(int gameTypeId) {
        //Implement validation against the datastore
        return true;
    }

    private static boolean isValidPlayerId(int playerId) {
        //Implement validation against the datastore
        return true;
    }
            

}
